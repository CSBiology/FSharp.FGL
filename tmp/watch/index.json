[{"uri":"http://localhost:8901/reference/fsharp-fgl.html","title":"FSharp.FGL","content":"Graph \nLenses \nVertices \nAdj\u003C\u0027Vertex, \u0027Edge\u003E \nContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E \nEdge\u003C\u0027Vertex\u003E \nGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E \nLEdge\u003C\u0027Vertex, \u0027Edge\u003E \nLVertex\u003C\u0027Vertex, \u0027Label\u003E \nMAdj\u003C\u0027Vertex, \u0027Edge\u003E \nMContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E"},{"uri":"http://localhost:8901/reference/fsharp-fgl-algorithm.html","title":"FSharp.FGL.Algorithm","content":"Models"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph.html","title":"FSharp.FGL.ArrayAdjacencyGraph","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed.html","title":"FSharp.FGL.Directed","content":"Edges \nGraph \nModels \nVertices"},{"uri":"http://localhost:8901/reference/fsharp-fgl-io.html","title":"FSharp.FGL.IO","content":"GDF"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected.html","title":"FSharp.FGL.Undirected","content":"Edges \nGraph \nVertices"},{"uri":"http://localhost:8901/reference/fsharp-fgl-graph.html","title":"Graph","content":"Graph \n\nGeneral functions for both directed and undirected graphs\n \nGraph.decompose \ndecompose \nGraph.tryDecompose \ntryDecompose \nGraph.decomposeFirst \ndecomposeFirst \nGraph.isEmpty \nisEmpty \nGraph.empty \nempty \nGraph.tryGetContext \ntryGetContext \nGraph.getContext \ngetContext \nGraph.mapContexts \nmapContexts \nGraph.foldContexts \nfoldContexts \nGraph.iterContexts \niterContexts"},{"uri":"http://localhost:8901/reference/fsharp-fgl-graph.html#decompose","title":"Graph.decompose","content":"Graph.decompose \ndecompose \n\nLookup a context in the graph. If the binding exists, it returns the context and the graph minus the vertex and its edges. Raising KeyNotFoundException if no binding exists in the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-graph.html#tryDecompose","title":"Graph.tryDecompose","content":"Graph.tryDecompose \ntryDecompose \n\nLookup a context in the graph. If the binding exists, it returns a Some value of the context and the graph minus the vertex and its edges. If it doesn\u0027t exist, returns None and the initial graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-graph.html#decomposeFirst","title":"Graph.decomposeFirst","content":"Graph.decomposeFirst \ndecomposeFirst \n\nIf the given graph contains at least one vertex, returns a Some value of the first context and the graph minus the associated vertex and its edges. If the graph is empty, returns None and the initial graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-graph.html#isEmpty","title":"Graph.isEmpty","content":"Graph.isEmpty \nisEmpty \n\nReturns true, if the Graph does not contain any vertices. Returns false, if not.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-graph.html#empty","title":"Graph.empty","content":"Graph.empty \nempty \n\nCreates a new, empty graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-graph.html#tryGetContext","title":"Graph.tryGetContext","content":"Graph.tryGetContext \ntryGetContext \n\nLookup a context in the graph, returning a Some value if a binding exists and None if not.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-graph.html#getContext","title":"Graph.getContext","content":"Graph.getContext \ngetContext \n\nLookup a context in the graph. Raising KeyNotFoundException if no binding exists in the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-graph.html#mapContexts","title":"Graph.mapContexts","content":"Graph.mapContexts \nmapContexts \n\nMaps contexts of the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-graph.html#foldContexts","title":"Graph.foldContexts","content":"Graph.foldContexts \nfoldContexts \n\nFolds over the contexts in the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-graph.html#iterContexts","title":"Graph.iterContexts","content":"Graph.iterContexts \niterContexts \n\nPerforms a given function on every edge of the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-lenses.html","title":"Lenses","content":"Lenses \n\nLenses for working with contexts\n \nLenses.pred_ \npred_ \nLenses.val_ \nval_ \nLenses.succ_ \nsucc_ \nLenses.mpred_ \nmpred_ \nLenses.msucc_ \nmsucc_"},{"uri":"http://localhost:8901/reference/fsharp-fgl-lenses.html#pred_","title":"Lenses.pred_","content":"Lenses.pred_ \npred_ \n\n Lens for predecessors in a context\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-lenses.html#val_","title":"Lenses.val_","content":"Lenses.val_ \nval_ \n\n Lens for vertex in a context\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-lenses.html#succ_","title":"Lenses.succ_","content":"Lenses.succ_ \nsucc_ \n\n Lens for successors in a context\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-lenses.html#mpred_","title":"Lenses.mpred_","content":"Lenses.mpred_ \nmpred_ \n\n Lens for predecessors in a Mcontext\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-lenses.html#msucc_","title":"Lenses.msucc_","content":"Lenses.msucc_ \nmsucc_ \n\n Lens for successors in a Mcontext\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-vertices.html","title":"Vertices","content":"Vertices \n\nFunctions for vertices of both directed and undirected graphs\n \nVertices.add \nadd \nVertices.addMany \naddMany \nVertices.remove \nremove \nVertices.removeMany \nremoveMany \nVertices.count \ncount \nVertices.contains \ncontains \nVertices.find \nfind \nVertices.tryFind \ntryFind \nVertices.toVertexList \ntoVertexList \nVertices.map \nmap \nVertices.mapi \nmapi \nVertices.iter \niter \nVertices.iteri \niteri \nVertices.fold \nfold \nVertices.filter \nfilter"},{"uri":"http://localhost:8901/reference/fsharp-fgl-vertices.html#add","title":"Vertices.add","content":"Vertices.add \nadd \n\nAdds a labeled vertex to the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-vertices.html#addMany","title":"Vertices.addMany","content":"Vertices.addMany \naddMany \n\nAdds a list of labeled vertices to the graph.    \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-vertices.html#remove","title":"Vertices.remove","content":"Vertices.remove \nremove \n\nRemoves a vertex from the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-vertices.html#removeMany","title":"Vertices.removeMany","content":"Vertices.removeMany \nremoveMany \n\nRemoves a list of vertices from the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-vertices.html#count","title":"Vertices.count","content":"Vertices.count \ncount \n\nEvaluates the number of vertices in the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-vertices.html#contains","title":"Vertices.contains","content":"Vertices.contains \ncontains \n\nReturns true, if the vertex v is contained in the graph. Otherwise, it returns false.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-vertices.html#find","title":"Vertices.find","content":"Vertices.find \nfind \n\nLookup a labeled vertex in the graph. Raising KeyNotFoundException if no binding exists in the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-vertices.html#tryFind","title":"Vertices.tryFind","content":"Vertices.tryFind \ntryFind \n\nLookup a labeled vertex in the graph, returning a Some value if a binding exists and None if not.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-vertices.html#toVertexList","title":"Vertices.toVertexList","content":"Vertices.toVertexList \ntoVertexList \n\nCreates a list of all vertices and their labels.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-vertices.html#map","title":"Vertices.map","content":"Vertices.map \nmap \n\nMaps the vertexlabels of the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-vertices.html#mapi","title":"Vertices.mapi","content":"Vertices.mapi \nmapi \n\nMaps the vertexlabels of the graph. The mapping function also receives an ascending integer index.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-vertices.html#iter","title":"Vertices.iter","content":"Vertices.iter \niter \n\nPerforms a given function on every vertex and its label of a graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-vertices.html#iteri","title":"Vertices.iteri","content":"Vertices.iteri \niteri \n\nPerforms a given function on every vertex and its label of a graph. The mapping function also receives an ascending integer index.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-vertices.html#fold","title":"Vertices.fold","content":"Vertices.fold \nfold \n\n Applies a function folder to each vertex of the graph, threading an accumulator argument through the computation.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-vertices.html#filter","title":"Vertices.filter","content":"Vertices.filter \nfilter \n\n Returns a new graph containing only the vertices for which the given predicate returns true.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-adj-2.html","title":"Adj\u003C\u0027Vertex, \u0027Edge\u003E","content":"Adj\u003C\u0027Vertex, \u0027Edge\u003E \n\nTuple list of adjacent vertices and the linking edges\n \nAdj\u003C\u0027Vertex, \u0027Edge\u003E.Tail \nTail \nAdj\u003C\u0027Vertex, \u0027Edge\u003E.Length \nLength \nAdj\u003C\u0027Vertex, \u0027Edge\u003E.Item \nItem \nAdj\u003C\u0027Vertex, \u0027Edge\u003E.Head \nHead \nAdj\u003C\u0027Vertex, \u0027Edge\u003E.IsEmpty \nIsEmpty \nAdj\u003C\u0027Vertex, \u0027Edge\u003E.Empty \nEmpty"},{"uri":"http://localhost:8901/reference/fsharp-fgl-adj-2.html#Tail","title":"Adj\u003C\u0027Vertex, \u0027Edge\u003E.Tail","content":"Adj\u003C\u0027Vertex, \u0027Edge\u003E.Tail \nTail \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-adj-2.html#Length","title":"Adj\u003C\u0027Vertex, \u0027Edge\u003E.Length","content":"Adj\u003C\u0027Vertex, \u0027Edge\u003E.Length \nLength \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-adj-2.html#Item","title":"Adj\u003C\u0027Vertex, \u0027Edge\u003E.Item","content":"Adj\u003C\u0027Vertex, \u0027Edge\u003E.Item \nItem \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-adj-2.html#Head","title":"Adj\u003C\u0027Vertex, \u0027Edge\u003E.Head","content":"Adj\u003C\u0027Vertex, \u0027Edge\u003E.Head \nHead \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-adj-2.html#IsEmpty","title":"Adj\u003C\u0027Vertex, \u0027Edge\u003E.IsEmpty","content":"Adj\u003C\u0027Vertex, \u0027Edge\u003E.IsEmpty \nIsEmpty \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-adj-2.html#Empty","title":"Adj\u003C\u0027Vertex, \u0027Edge\u003E.Empty","content":"Adj\u003C\u0027Vertex, \u0027Edge\u003E.Empty \nEmpty \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-context-3.html","title":"Context\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E","content":"Context\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E \n\nContext of a vertice as defined by Martin Erwig. Adjacency of type \u0027Adj\u0027\n \nContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item1 \nItem1 \nContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item2 \nItem2 \nContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item3 \nItem3 \nContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item4 \nItem4"},{"uri":"http://localhost:8901/reference/fsharp-fgl-context-3.html#Item1","title":"Context\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item1","content":"Context\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item1 \nItem1 \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-context-3.html#Item2","title":"Context\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item2","content":"Context\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item2 \nItem2 \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-context-3.html#Item3","title":"Context\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item3","content":"Context\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item3 \nItem3 \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-context-3.html#Item4","title":"Context\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item4","content":"Context\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item4 \nItem4 \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-edge-1.html","title":"Edge\u003C\u0027Vertex\u003E","content":"Edge\u003C\u0027Vertex\u003E \n\nUnlabeled edge\n \nEdge\u003C\u0027Vertex\u003E.Item1 \nItem1 \nEdge\u003C\u0027Vertex\u003E.Item2 \nItem2"},{"uri":"http://localhost:8901/reference/fsharp-fgl-edge-1.html#Item1","title":"Edge\u003C\u0027Vertex\u003E.Item1","content":"Edge\u003C\u0027Vertex\u003E.Item1 \nItem1 \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-edge-1.html#Item2","title":"Edge\u003C\u0027Vertex\u003E.Item2","content":"Edge\u003C\u0027Vertex\u003E.Item2 \nItem2 \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-graph-3.html","title":"Graph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E","content":"Graph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E \n\nMap of Vertices as keys and MContexts as values\n \nGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item \nItem \nGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Count \nCount \nGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.IsEmpty \nIsEmpty"},{"uri":"http://localhost:8901/reference/fsharp-fgl-graph-3.html#Item","title":"Graph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item","content":"Graph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item \nItem \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-graph-3.html#Count","title":"Graph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Count","content":"Graph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Count \nCount \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-graph-3.html#IsEmpty","title":"Graph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.IsEmpty","content":"Graph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.IsEmpty \nIsEmpty \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-ledge-2.html","title":"LEdge\u003C\u0027Vertex, \u0027Edge\u003E","content":"LEdge\u003C\u0027Vertex, \u0027Edge\u003E \n\nLabeled edge\n \nLEdge\u003C\u0027Vertex, \u0027Edge\u003E.Item1 \nItem1 \nLEdge\u003C\u0027Vertex, \u0027Edge\u003E.Item2 \nItem2 \nLEdge\u003C\u0027Vertex, \u0027Edge\u003E.Item3 \nItem3"},{"uri":"http://localhost:8901/reference/fsharp-fgl-ledge-2.html#Item1","title":"LEdge\u003C\u0027Vertex, \u0027Edge\u003E.Item1","content":"LEdge\u003C\u0027Vertex, \u0027Edge\u003E.Item1 \nItem1 \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-ledge-2.html#Item2","title":"LEdge\u003C\u0027Vertex, \u0027Edge\u003E.Item2","content":"LEdge\u003C\u0027Vertex, \u0027Edge\u003E.Item2 \nItem2 \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-ledge-2.html#Item3","title":"LEdge\u003C\u0027Vertex, \u0027Edge\u003E.Item3","content":"LEdge\u003C\u0027Vertex, \u0027Edge\u003E.Item3 \nItem3 \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-lvertex-2.html","title":"LVertex\u003C\u0027Vertex, \u0027Label\u003E","content":"LVertex\u003C\u0027Vertex, \u0027Label\u003E \n\nLabeled vertex\n \nLVertex\u003C\u0027Vertex, \u0027Label\u003E.Item1 \nItem1 \nLVertex\u003C\u0027Vertex, \u0027Label\u003E.Item2 \nItem2"},{"uri":"http://localhost:8901/reference/fsharp-fgl-lvertex-2.html#Item1","title":"LVertex\u003C\u0027Vertex, \u0027Label\u003E.Item1","content":"LVertex\u003C\u0027Vertex, \u0027Label\u003E.Item1 \nItem1 \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-lvertex-2.html#Item2","title":"LVertex\u003C\u0027Vertex, \u0027Label\u003E.Item2","content":"LVertex\u003C\u0027Vertex, \u0027Label\u003E.Item2 \nItem2 \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-madj-2.html","title":"MAdj\u003C\u0027Vertex, \u0027Edge\u003E","content":"MAdj\u003C\u0027Vertex, \u0027Edge\u003E \n\nMap of adjacent vertices as key and the linking edges as values\n \nMAdj\u003C\u0027Vertex, \u0027Edge\u003E.Item \nItem \nMAdj\u003C\u0027Vertex, \u0027Edge\u003E.Count \nCount \nMAdj\u003C\u0027Vertex, \u0027Edge\u003E.IsEmpty \nIsEmpty"},{"uri":"http://localhost:8901/reference/fsharp-fgl-madj-2.html#Item","title":"MAdj\u003C\u0027Vertex, \u0027Edge\u003E.Item","content":"MAdj\u003C\u0027Vertex, \u0027Edge\u003E.Item \nItem \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-madj-2.html#Count","title":"MAdj\u003C\u0027Vertex, \u0027Edge\u003E.Count","content":"MAdj\u003C\u0027Vertex, \u0027Edge\u003E.Count \nCount \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-madj-2.html#IsEmpty","title":"MAdj\u003C\u0027Vertex, \u0027Edge\u003E.IsEmpty","content":"MAdj\u003C\u0027Vertex, \u0027Edge\u003E.IsEmpty \nIsEmpty \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-mcontext-3.html","title":"MContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E","content":"MContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E \n\nContext of a vertices as defined by Martin Erwig. Adjacency of type \u0027MAdj\u0027\n \nMContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item1 \nItem1 \nMContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item2 \nItem2 \nMContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item3 \nItem3"},{"uri":"http://localhost:8901/reference/fsharp-fgl-mcontext-3.html#Item1","title":"MContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item1","content":"MContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item1 \nItem1 \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-mcontext-3.html#Item2","title":"MContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item2","content":"MContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item2 \nItem2 \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-mcontext-3.html#Item3","title":"MContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item3","content":"MContext\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Item3 \nItem3 \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-algorithm-models.html","title":"Models","content":"Models \n\nContains generic functions for creating model graphs\n \nModels.gilbert \ngilbert \nModels.erdosRenyi \nerdosRenyi"},{"uri":"http://localhost:8901/reference/fsharp-fgl-algorithm-models.html#gilbert","title":"Models.gilbert","content":"Models.gilbert \ngilbert \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-algorithm-models.html#erdosRenyi","title":"Models.erdosRenyi","content":"Models.erdosRenyi \nerdosRenyi \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E \n\n  A mutable directed graph data structure efficient for large sparse graph representations\n \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.( .ctor ) \n( .ctor ) \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.( .ctor ) \n( .ctor ) \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.AddEdge \nAddEdge \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.AddManyEdges \nAddManyEdges \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.AddManyVertices \nAddManyVertices \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.AddVertex \nAddVertex \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.ContainsEdge \nContainsEdge \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.ContainsVertex \nContainsVertex \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Copy \nCopy \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Degree \nDegree \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetConnectedEdges \nGetConnectedEdges \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetEdge \nGetEdge \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetEdges \nGetEdges \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetInEdges \nGetInEdges \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetLabel \nGetLabel \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetOutEdges \nGetOutEdges \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetWeight \nGetWeight \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.InDegree \nInDegree \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.IsOutEdgesEmpty \nIsOutEdgesEmpty \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Neighbours \nNeighbours \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.OutDegree \nOutDegree \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Predecessors \nPredecessors \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.RemoveEdge \nRemoveEdge \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.RemoveManyEdges \nRemoveManyEdges \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.RemoveManyVertices \nRemoveManyVertices \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.RemoveVertex \nRemoveVertex \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.SetLabel \nSetLabel \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.SetWeight \nSetWeight \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Successors \nSuccessors \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetConnectedEdges \nTryGetConnectedEdges \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetEdge \nTryGetEdge \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetEdges \nTryGetEdges \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetInEdges \nTryGetInEdges \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetLabel \nTryGetLabel \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetOutEdges \nTryGetOutEdges \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetWeight \nTryGetWeight \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryNeighbours \nTryNeighbours \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryPredecessors \nTryPredecessors \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TrySuccessors \nTrySuccessors \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.WeightedDegree \nWeightedDegree \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.EdgeCount \nEdgeCount \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.IsVerticesEmpty \nIsVerticesEmpty \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.AllowParallelEdges \nAllowParallelEdges \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.IsEdgesEmpty \nIsEdgesEmpty \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.VertexCount \nVertexCount \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Vertices \nVertices \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.IsDirected \nIsDirected \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Edges \nEdges \nArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Labels \nLabels"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#( .ctor )","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.( .ctor )","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#( .ctor )","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.( .ctor )","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#AddEdge","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.AddEdge","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.AddEdge \nAddEdge \n\nAdds a labeled, edge to the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#AddManyEdges","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.AddManyEdges","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.AddManyEdges \nAddManyEdges \n\nAdds an array of labeled, edges to the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#AddManyVertices","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.AddManyVertices","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.AddManyVertices \nAddManyVertices \n\nAdds an array of labeled vertices to the graph.    \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#AddVertex","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.AddVertex","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.AddVertex \nAddVertex \n\nAdds a labeled vertex to the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#ContainsEdge","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.ContainsEdge","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.ContainsEdge \nContainsEdge \n\nReturns true, if the edge is found in the graph, else false.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#ContainsVertex","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.ContainsVertex","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.ContainsVertex \nContainsVertex \n\nReturns true, if the graph contains the vertex, else false.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#Copy","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Copy","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Copy \nCopy \n\nCopys the given graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#Degree","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Degree","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Degree \nDegree \n\nReturns the degree of the vertex v.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#GetConnectedEdges","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetConnectedEdges","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetConnectedEdges \nGetConnectedEdges \n\nLookup all edges connected to the vertex v in the graph, returning an array of connected edges.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#GetEdge","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetEdge","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetEdge \nGetEdge \n\nReturn the first edge in the graph that matches the conditions.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#GetEdges","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetEdges","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetEdges \nGetEdges \n\nReturn all edges in the graph that matches the conditions\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#GetInEdges","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetInEdges","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetInEdges \nGetInEdges \n\nLookup all edges that target the vertex v in the graph, returning an array of connected edges.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#GetLabel","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetLabel","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetLabel \nGetLabel \n\nReturns the label for the vertex v.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#GetOutEdges","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetOutEdges","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetOutEdges \nGetOutEdges \n\nLookup all edges that originate from the vertex v in the graph, returning an array of connected edges.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#GetWeight","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetWeight","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.GetWeight \nGetWeight \n\nReturn the weight of the edge defined by source and vertex\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#InDegree","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.InDegree","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.InDegree \nInDegree \n\nReturns the number of edges that originate from the vertex v.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#IsOutEdgesEmpty","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.IsOutEdgesEmpty","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.IsOutEdgesEmpty \nIsOutEdgesEmpty \n\nReturns true, if the vertex v does not have edges connected to it. Otherwise, it returns false.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#Neighbours","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Neighbours","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Neighbours \nNeighbours \n\nReturns the neighbouring edges of the vertex v.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#OutDegree","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.OutDegree","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.OutDegree \nOutDegree \n\nReturns the number of edges that target the vertex v.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#Predecessors","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Predecessors","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Predecessors \nPredecessors \n\nReturns the preceding vertices of the vertex.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#RemoveEdge","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.RemoveEdge","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.RemoveEdge \nRemoveEdge \n\nRemoves an edge from the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#RemoveManyEdges","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.RemoveManyEdges","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.RemoveManyEdges \nRemoveManyEdges \n\nRemoves an array of edges from the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#RemoveManyVertices","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.RemoveManyVertices","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.RemoveManyVertices \nRemoveManyVertices \n\nRemoves an array of vertices from the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#RemoveVertex","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.RemoveVertex","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.RemoveVertex \nRemoveVertex \n\nRemoves a vertex from the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#SetLabel","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.SetLabel","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.SetLabel \nSetLabel \n\nSets the label for the vertex v.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#SetWeight","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.SetWeight","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.SetWeight \nSetWeight \n\nSet the weight of the LEdge defined by source and vertex to be equal weight.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#Successors","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Successors","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Successors \nSuccessors \n\nReturns the succeeding vertices of the vertex.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#TryGetConnectedEdges","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetConnectedEdges","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetConnectedEdges \nTryGetConnectedEdges \n\nLookup all edges connected to the vertex v in the graph, returning a Some value if a binding exists and None if not.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#TryGetEdge","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetEdge","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetEdge \nTryGetEdge \n\nLookup the first edge in the graph that matches the conditions, returning a Some value if it exists and None if not.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#TryGetEdges","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetEdges","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetEdges \nTryGetEdges \n\nLookup all edges in the graph that matches the conditions, returning a Some value if it exists and None if not.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#TryGetInEdges","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetInEdges","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetInEdges \nTryGetInEdges \n\nLookup all edges that target the vertex v in the graph, returning a Some value if a binding exists and None if not.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#TryGetLabel","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetLabel","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetLabel \nTryGetLabel \n\nReturns Some label, if a label for the vertex v exists, else none.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#TryGetOutEdges","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetOutEdges","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetOutEdges \nTryGetOutEdges \n\nLookup all edges that originate from the vertex v in the graph, returning a Some value if a binding exists and None if not.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#TryGetWeight","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetWeight","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryGetWeight \nTryGetWeight \n\nLookup the weight of the edge defined by source and vertex. If it exists, return Some value, else none.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#TryNeighbours","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryNeighbours","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryNeighbours \nTryNeighbours \n\nReturns Some vertices if they are neighbours of the vertex, else None.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#TryPredecessors","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryPredecessors","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TryPredecessors \nTryPredecessors \n\nReturns Some vertices if they are predecessors of the vertex, else None.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#TrySuccessors","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TrySuccessors","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.TrySuccessors \nTrySuccessors \n\nReturns Some vertices if they are successors of the vertex, else None.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#WeightedDegree","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.WeightedDegree","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.WeightedDegree \nWeightedDegree \n\nReturns the weighted degree of the vertex v.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#EdgeCount","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.EdgeCount","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.EdgeCount \nEdgeCount \n\nNumber of edges in the graph\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#IsVerticesEmpty","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.IsVerticesEmpty","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.IsVerticesEmpty \nIsVerticesEmpty \n\nReturns true, if there are no vertices in the graph, else false.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#AllowParallelEdges","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.AllowParallelEdges","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.AllowParallelEdges \nAllowParallelEdges \n\nReturns true, since parallel edges are allowed\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#IsEdgesEmpty","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.IsEdgesEmpty","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.IsEdgesEmpty \nIsEdgesEmpty \n\nReturns true, if there are no edges in the graph, else false.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#VertexCount","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.VertexCount","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.VertexCount \nVertexCount \n\nReturns the number of vertices of the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#Vertices","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Vertices","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Vertices \nVertices \n\nReturns the vertices of the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#IsDirected","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.IsDirected","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.IsDirected \nIsDirected \n\nReturns true, since the graph model is always directed.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#Edges","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Edges","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Edges \nEdges \n\nReturns all edges of the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-arrayadjacencygraph-arrayadjacencygraph-3.html#Labels","title":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Labels","content":"ArrayAdjacencyGraph\u003C\u0027Vertex, \u0027Label, \u0027Edge\u003E.Labels \nLabels \n\nReturns all labels of the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html","title":"Edges","content":"Edges \n\nFunctions for edges of directed Graphs\n \nEdges.add \nadd \nEdges.addMany \naddMany \nEdges.remove \nremove \nEdges.removeMany \nremoveMany \nEdges.count \ncount \nEdges.contains \ncontains \nEdges.find \nfind \nEdges.tryFind \ntryFind \nEdges.undirect \nundirect \nEdges.rev \nrev \nEdges.toEdgeList \ntoEdgeList \nEdges.map \nmap \nEdges.iter \niter \nEdges.iteri \niteri \nEdges.fold \nfold \nEdges.filter \nfilter"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html#add","title":"Edges.add","content":"Edges.add \nadd \n\nAdds a labeled, directed edge to the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html#addMany","title":"Edges.addMany","content":"Edges.addMany \naddMany \n\nAdds a list of labeled, directed edges to the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html#remove","title":"Edges.remove","content":"Edges.remove \nremove \n\nRemoves an edge from the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html#removeMany","title":"Edges.removeMany","content":"Edges.removeMany \nremoveMany \n\nRemoves a list of edges from the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html#count","title":"Edges.count","content":"Edges.count \ncount \n\nEvaluates the number of edges in the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html#contains","title":"Edges.contains","content":"Edges.contains \ncontains \n\nReturns true, if the edge from vertex v1 to vertex v2 is contained in the graph. Otherwise, it returns false.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html#find","title":"Edges.find","content":"Edges.find \nfind \n\nLookup a labeled edge in the graph. Raising KeyNotFoundException if no binding exists in the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html#tryFind","title":"Edges.tryFind","content":"Edges.tryFind \ntryFind \n\nLookup a labeled edge in the graph, returning a Some value if a binding exists and None if not.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html#undirect","title":"Edges.undirect","content":"Edges.undirect \nundirect \n\nTransforms a directed graph to an undirected graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html#rev","title":"Edges.rev","content":"Edges.rev \nrev \n\nReverses all edges in the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html#toEdgeList","title":"Edges.toEdgeList","content":"Edges.toEdgeList \ntoEdgeList \n\nCreates a list of all edges and their labels.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html#map","title":"Edges.map","content":"Edges.map \nmap \n\nMaps edgelabels of the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html#iter","title":"Edges.iter","content":"Edges.iter \niter \n\nPerforms a given function on every edge of the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html#iteri","title":"Edges.iteri","content":"Edges.iteri \niteri \n\nPerforms a given function on every edge of the graph, which also receives an ascending integer index.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html#fold","title":"Edges.fold","content":"Edges.fold \nfold \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-edges.html#filter","title":"Edges.filter","content":"Edges.filter \nfilter \n\n Returns a new graph containing only the edges for which the given predicate returns true.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-graph.html","title":"Graph","content":"Graph \n \nGraph.create \ncreate \nGraph.toAdjacencyMatrix \ntoAdjacencyMatrix \nGraph.toAdjacencyMatrixBy \ntoAdjacencyMatrixBy"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-graph.html#create","title":"Graph.create","content":"Graph.create \ncreate \n\nCreates a directed graph from a list of vertices and a list of edges\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-graph.html#toAdjacencyMatrix","title":"Graph.toAdjacencyMatrix","content":"Graph.toAdjacencyMatrix \ntoAdjacencyMatrix \n\nTransforms a graph into an adjacency matrix of its edges.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-graph.html#toAdjacencyMatrixBy","title":"Graph.toAdjacencyMatrixBy","content":"Graph.toAdjacencyMatrixBy \ntoAdjacencyMatrixBy \n\nTransfroms a graph into a adjacency matrix, maps every edge using the projection.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-models.html","title":"Models","content":"Models \n \nModels.gilbert \ngilbert \nModels.erdosRenyi \nerdosRenyi"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-models.html#gilbert","title":"Models.gilbert","content":"Models.gilbert \ngilbert \n\nCreates a directed graph of vertexcount n and edge probability p\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-models.html#erdosRenyi","title":"Models.erdosRenyi","content":"Models.erdosRenyi \nerdosRenyi \n\nCreates a directed graph of vertexcount v and edgecount e\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-vertices.html","title":"Vertices","content":"Vertices \n\nFunctions for vertices of directed Graphs\n \nVertices.predecessors \npredecessors \nVertices.successors \nsuccessors \nVertices.neighbours \nneighbours \nVertices.inwardDegree \ninwardDegree \nVertices.outwardDegree \noutwardDegree \nVertices.degree \ndegree \nVertices.clusteringCoefficient \nclusteringCoefficient \nVertices.inwardEdges \ninwardEdges \nVertices.outwardEdges \noutwardEdges \nVertices.tovertexList \ntovertexList"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-vertices.html#predecessors","title":"Vertices.predecessors","content":"Vertices.predecessors \npredecessors \n\nLists the vertices which have edges pointing to the vertex.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-vertices.html#successors","title":"Vertices.successors","content":"Vertices.successors \nsuccessors \n\nLists the vertices which have edges pointing away from the vertex.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-vertices.html#neighbours","title":"Vertices.neighbours","content":"Vertices.neighbours \nneighbours \n\nLists the vertices which are connected to the vertex.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-vertices.html#inwardDegree","title":"Vertices.inwardDegree","content":"Vertices.inwardDegree \ninwardDegree \n\nEvaluates the number of edges pointing to the vertex.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-vertices.html#outwardDegree","title":"Vertices.outwardDegree","content":"Vertices.outwardDegree \noutwardDegree \n\nEvaluates the number of edges pointing away from the vertex.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-vertices.html#degree","title":"Vertices.degree","content":"Vertices.degree \ndegree \n\nEvaluates the number of edges associated with the vertex.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-vertices.html#clusteringCoefficient","title":"Vertices.clusteringCoefficient","content":"Vertices.clusteringCoefficient \nclusteringCoefficient \n\nEvaluates the clustering coefficient of the vertex.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-vertices.html#inwardEdges","title":"Vertices.inwardEdges","content":"Vertices.inwardEdges \ninwardEdges \n\n Returns all edges pointing to the given vertex\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-vertices.html#outwardEdges","title":"Vertices.outwardEdges","content":"Vertices.outwardEdges \noutwardEdges \n\n Returns all edges pointing away from the given vertex\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-directed-vertices.html#tovertexList","title":"Vertices.tovertexList","content":"Vertices.tovertexList \ntovertexList \n\nCreates a list of all vertices and their labels.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-io-gdf.html","title":"GDF","content":"GDF \n \nGDF.GDFValue \nGDFValue \nGDF.fromArray \nfromArray \nGDF.fromFile \nfromFile \nGDF.toFile \ntoFile"},{"uri":"http://localhost:8901/reference/fsharp-fgl-io-gdf.html#fromArray","title":"GDF.fromArray","content":"GDF.fromArray \nfromArray \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-io-gdf.html#fromFile","title":"GDF.fromFile","content":"GDF.fromFile \nfromFile \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-io-gdf.html#toFile","title":"GDF.toFile","content":"GDF.toFile \ntoFile \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-io-gdf-gdfvalue.html","title":"GDFValue","content":"GDFValue \n \nGDFValue.VARCHAR \nVARCHAR \nGDFValue.BOOLEAN \nBOOLEAN \nGDFValue.DOUBLE \nDOUBLE \nGDFValue.INTEGER \nINTEGER"},{"uri":"http://localhost:8901/reference/fsharp-fgl-io-gdf-gdfvalue.html#VARCHAR","title":"GDFValue.VARCHAR","content":"GDFValue.VARCHAR \nVARCHAR \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-io-gdf-gdfvalue.html#BOOLEAN","title":"GDFValue.BOOLEAN","content":"GDFValue.BOOLEAN \nBOOLEAN \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-io-gdf-gdfvalue.html#DOUBLE","title":"GDFValue.DOUBLE","content":"GDFValue.DOUBLE \nDOUBLE \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-io-gdf-gdfvalue.html#INTEGER","title":"GDFValue.INTEGER","content":"GDFValue.INTEGER \nINTEGER \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-edges.html","title":"Edges","content":"Edges \n\nFunctions for edges of undirected Graphs\n \nEdges.add \nadd \nEdges.addMany \naddMany \nEdges.remove \nremove \nEdges.removeMany \nremoveMany \nEdges.count \ncount \nEdges.contains \ncontains \nEdges.find \nfind \nEdges.tryFind \ntryFind \nEdges.toEdgeList \ntoEdgeList \nEdges.map \nmap \nEdges.iter \niter \nEdges.iteri \niteri \nEdges.fold \nfold"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-edges.html#add","title":"Edges.add","content":"Edges.add \nadd \n\nAdds a labeled, undirected edge to the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-edges.html#addMany","title":"Edges.addMany","content":"Edges.addMany \naddMany \n\nAdds a list of labeled, undirected edges to the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-edges.html#remove","title":"Edges.remove","content":"Edges.remove \nremove \n\nRemoves an edge from the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-edges.html#removeMany","title":"Edges.removeMany","content":"Edges.removeMany \nremoveMany \n\nRemoves a list of edges from the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-edges.html#count","title":"Edges.count","content":"Edges.count \ncount \n\nEvaluates the number of edges in the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-edges.html#contains","title":"Edges.contains","content":"Edges.contains \ncontains \n\nReturns true, if the edge from vertex v1 to vertex v2 is contained in the graph. Otherwise, it returns false.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-edges.html#find","title":"Edges.find","content":"Edges.find \nfind \n\nLookup a labeled edge in the graph. Raising KeyNotFoundException if no binding exists in the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-edges.html#tryFind","title":"Edges.tryFind","content":"Edges.tryFind \ntryFind \n\nLookup a labeled edge in the graph, returning a Some value if a binding exists and None if not.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-edges.html#toEdgeList","title":"Edges.toEdgeList","content":"Edges.toEdgeList \ntoEdgeList \n\nCreates a list of all edges and their labels.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-edges.html#map","title":"Edges.map","content":"Edges.map \nmap \n\nMaps edgelabels of the graph.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-edges.html#iter","title":"Edges.iter","content":"Edges.iter \niter \n\nPerforms a given function on every edge of the graph.                \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-edges.html#iteri","title":"Edges.iteri","content":"Edges.iteri \niteri \n\nPerforms a given function on every edge of the graph, which also receives an ascending integer index.                                    \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-edges.html#fold","title":"Edges.fold","content":"Edges.fold \nfold \n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-graph.html","title":"Graph","content":"Graph \n \nGraph.create \ncreate \nGraph.toAdjacencyMatrix \ntoAdjacencyMatrix \nGraph.toAdjacencyMatrixBy \ntoAdjacencyMatrixBy"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-graph.html#create","title":"Graph.create","content":"Graph.create \ncreate \n\nCreates an undirected graph from a list of vertices and a list of edges\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-graph.html#toAdjacencyMatrix","title":"Graph.toAdjacencyMatrix","content":"Graph.toAdjacencyMatrix \ntoAdjacencyMatrix \n\nTransforms a graph into a adjacency matrix of its edges. If there is no edge between two vertices, the noEdgeValue is used.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-graph.html#toAdjacencyMatrixBy","title":"Graph.toAdjacencyMatrixBy","content":"Graph.toAdjacencyMatrixBy \ntoAdjacencyMatrixBy \n\nTransfroms a graph into a adjacency matrix, maps every edge using the projection.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-vertices.html","title":"Vertices","content":"Vertices \n\nFunctions for vertices of undirected Graphs\n \nVertices.neighbours \nneighbours \nVertices.degree \ndegree \nVertices.clusteringCoefficient \nclusteringCoefficient \nVertices.tovertexList \ntovertexList"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-vertices.html#neighbours","title":"Vertices.neighbours","content":"Vertices.neighbours \nneighbours \n\nLists the vertices which are connected to the vertex.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-vertices.html#degree","title":"Vertices.degree","content":"Vertices.degree \ndegree \n\nEvaluates the number of edges associated with the vertex.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-vertices.html#clusteringCoefficient","title":"Vertices.clusteringCoefficient","content":"Vertices.clusteringCoefficient \nclusteringCoefficient \n\nEvaluates the clustering coefficient of the vertex.\n"},{"uri":"http://localhost:8901/reference/fsharp-fgl-undirected-vertices.html#tovertexList","title":"Vertices.tovertexList","content":"Vertices.tovertexList \ntovertexList \n\nCreates a list of all vertices and their labels.\n"},{"uri":"http://localhost:8901/content/GDF.html","title":"GDF Format\r\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#I @\u0022../../bin/FSharp.FGL/net47/\u0022\n#I @\u0022C:\\Users\\Christopher\\source\\repos\\LibraChris\\FSharp.FGL\\bin\\FSharp.FGL\\net47\u0022\n#I @\u0022C:\\Users\\Christopher\\source\\repos\\LibraChris\\FSharp.FGL\\bin\\FSharp.FGL.IO\\net47\u0022\n#r \u0022Aether.dll\u0022\n#r \u0022FSharp.FGL.dll\u0022\n#r \u0022FSharp.FGL.IO.dll\u0022\n(**\n# GDF Format\nGDF is the file formate used by [The Graph Exploration System (GUESS)](http://graphexploration.cond.org/) . It is build similar to a database table or \u003Cabbr title=\u0022Comma Seperated File\u0022\u003ECSV\u003C/abbr\u003E. Both edge and node data is defined in a single file, each initiated by their respective headers. Each element (i.e. node or edge) is on a line and values are separated by comma. Node definition is started by \u0022nodedef\u003Ename\u0022 and edge definition by \u0022edgedef\u003Enode1\u0022. For nodes, only the name is needed to build, but for edges both \u201Cnode1\u201D and \u201Cnode2\u201D are required, which are the names of the two nodes you are connecting.  \n\u003Cbr\u003E\n## Example\nThis example demonstrates a possible gdf data structure.\n\n\u003Cbr\u003E\n\n  nodedef\u003Ename VARCHAR,label VARCHAR\n  \u003Cbr\u003E\n  s1,Site number 1\n  \u003Cbr\u003E\n  s2,Site number 2\n  \u003Cbr\u003E\n  s3,Site number 3\n  \u003Cbr\u003E\n  edgedef\u003Enode1 VARCHAR,node2 VARCHAR, weight DOUBLE\n  \u003Cbr\u003E\n  s1,s2,1.2341\n  \u003Cbr\u003E\n  s2,s3,0.453\n  \u003Cbr\u003E\n  s3,s2, 2.34\n  \u003Cbr\u003E\n  s3,s1, 0.871\n  \u003Cbr\u003E\n\n\u003Cbr\u003E\n## Reading GDF files\nTo read GDF files, just use the ofFile function located in the gdf module of the FSharp.FGL.IO namespace. It does not need anything but the file path ans will return the vertices and edges as a vertex list, edge list tupel.\n*)\nopen Aether\n\nopen FSharp.FGL.IO\n\nlet fileDir = __SOURCE_DIRECTORY__ \u002B \u0022/data/\u0022\n\nlet path = fileDir \u002B \u0022GDFExample.txt\u0022\n\nlet gdfFileRead = GDF.fromFile path\n\n\n\n(**\n\u003Cbr\u003E\nAdditionally, you can use the fromArray function instead of fromFile to directly transform an array to a vertex list, edge list tupel.\n\u003Cbr\u003E\n*)\nopen Aether\n\nopen FSharp.FGL.IO\n\nlet gdfArrayRead = GDF.fromArray [|\u0022nodedef\u003Ename VARCHAR,label VARCHAR\u0022;\u0022s1,Site number 1\u0022;\u0022s2,Site number 2\u0022;\u0022edgedef\u003Enode1 VARCHAR,node2 VARCHAR,weight DOUBLE\u0022;\u0022s1,s2,1.2341\u0022|]\n\n(**\n##Writing GDF format files\nTo save a graph that takes the same form as a graph created by the reading GDF file functions, the toFile function can be applied. Additionally to the graph and the filepath, the state of the graph(directed/undirected) has to be stated. In case of an undirected graph, the addendum false is used.\n*)\nopen Aether\n\nopen FSharp.FGL.IO\n\nopen FSharp.FGL.Directed\n\nlet pathSave = fileDir \u002B \u0022GDFExampleToFile.txt\u0022\n\nlet graph = Graph.create (fst gdfFileRead) (snd gdfFileRead)\n\nGDF.toFile graph true pathSave"},{"uri":"http://localhost:8901/content/index.html","title":"FSharp.FGL\r\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#I \u0022../../bin/FSharp.FGL/net47/\u0022\n\n(**\n# FSharp.FGL\nFSharp.FGL is a functional library to work with graphs. \n\u003Cbr\u003E\n## Example\n\n\u003Cbr\u003E\nThis example demonstrates using a function defined in this sample library.\n\u003Cbr\u003E\n*)\n#r \u0022FSharp.FGL.dll\u0022\nopen FSharp.FGL \n\nGraph.empty\n|\u003E Undirected.Vertices.addMany [(1,\u0022Look At Me Im VertexOne\u0022);(2,\u0022Look At Me Im VertexTwo\u0022)]\n|\u003E Undirected.Edges.add (1,2,\u0022Im An Edge Between VertexOne And VertexTwo \u0022)\n|\u003E Undirected.Edges.tryFind 1 2\n//Returns Some (1,2,\u0022Im An Edge Between VertexOne And VertexTwo \u0022)\n\n(**\n\n## Samples \u0026 documentation\n\u003Cbr\u003E\n\nThe library comes with comprehensible documentation. \nIt can include tutorials automatically generated from \u0060*.fsx\u0060 files in [the content folder][content]. \nThe API reference is automatically generated from comments in the library implementation.\n\n * [Tutorial](tutorial.html) contains a further explanation of this sample library.\n\n * [API Reference](reference/index.html) contains automatically generated documentation for all types, modules\n   and functions in the library. This includes additional brief samples on using most of the\n   functions.\n   \n## Contributing and copyright\n\n\nThe project is hosted on [GitHub][gh] where you can [report issues][issues], fork \nthe project and submit pull requests. If you\u0027re adding a new public API, please also \nconsider adding [samples][content] that can be turned into a documentation. You might\nalso want to read the [library design notes][readme] to understand how it works.\n\nThe library is available under Public Domain license, which allows modification and \nredistribution for both commercial and non-commercial purposes. For more information see the \n[License file][license] in the GitHub repository. \n\n  [content]: https://github.com/fsprojects/FSharp.FGL/tree/master/docs/content\n  [gh]: https://github.com/fsprojects/FSharp.FGL\n  [issues]: https://github.com/fsprojects/FSharp.FGL/issues\n  [readme]: https://github.com/fsprojects/FSharp.FGL/blob/master/README.md\n  [license]: https://github.com/fsprojects/FSharp.FGL/blob/master/LICENSE.txt\n*)"},{"uri":"http://localhost:8901/content/models.html","title":"Testing with models\r\n","content":"(*** hide ***) \n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#I \u0022../../bin/FSharp.FGL\u0022\n\n(**\n#Testing with models\n*)\n#r \u0022FSharp.FGL\u0022\nopen FSharp.FGL.Directed\n(**\n## Motivation and overview\nIn every implementation workflow, there comes the point where you have to test wether everything works as expexted or not.\nFor this, a matching test set is necessary. In some cases (e.g. List sorting algorithms) creating those test sets is done in a matter of seconds.\nIn other cases, especially if the data you work with is more than one dimensional, it can get quite tedious.\nTo this effect, FSharp.FGl comes equipped with implementations of random graph generation models.  \nIn this tutorial I want to introduce you to the models implemented and how to generate graphs with the given functions:\n    \n* [Gilbert model](models.html#Gilbert-model) (not scale free)\n\n* [Erd\u0151s\u2013R\u00E9nyi model](models.html#Erd\u0151s\u2013R\u00E9nyi-model) (not scale free)\n\n* Barab\u00E1si\u2013Albert model (scale free; work in progress)  \n\nAfterwards I\u0027ll give a quick intro about [how to use the implementations to create graphs of any type](models.html#Genericity).\n\n## Models\n### Gilbert model\n\nThe gilbert model (or G(N,p) model) was introduced by Edgar Gilbert in 1959. In this model, you assign a fixed amount of vertices N and a probability p.\np denotes the probality, that edge between two vertices exists or not.  \nThe function is located in the Models module and can be used in the following way:\n*)\n\nlet N = 50\nlet p = 0.5\n//This function takes an int and creates a labeled vertex ((id,label) tuple)\nlet vertexCreator i = (i,sprintf \u0022Call me Vertex nr. %i\u0022 i)\n\nlet myGilbertGraph = Models.gilbert vertexCreator N p\n\n(**\n### Erd\u0151s\u2013R\u00E9nyi model\n\nThe Erd\u0151s\u2013R\u00E9nyi model (or G(N,L) model) as used by P\u00E1l Erd\u0151s and Alfr\u00E9d R\u00E9nyi is a graph model where you assign a fixed vertex count and also a random edge count.\nThose edges then get randomly distributed between the given edges.\nThe function is located in the Models module and can be used in the following way:\n*)\n\nlet L = 200\n//We just use the vertexCreator and the nodeCount N assigned above\nlet myErdosRenyiGraph = Models.erdosRenyi vertexCreator N L\n\n(**\n## Genericity\nwork in progress\n*)"},{"uri":"http://localhost:8901/content/newgraph.html","title":"Working with FSharp.FGL\r\n","content":"(*** hide ***) \n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#I \u0022../../bin/FSharp.FGL\u0022\n\n(**\n#Working with FSharp.FGL\n\nIn FSharp.FGL, the basic functions are separated into the Directed and the Undirected namespaces. Both undirected and directed graph functions use the same input type, but the information is read differently, depending on wether you call a function from the undirected or the directed namespace. Therefore it is advised to decide which kind of graph you work with beforehand. \nIn this quick tutorial we will work with directed Graphs.\n\n*)\n\n#r \u0022FSharp.FGL.dll\u0022\nopen FSharp.FGL\nopen FSharp.FGL.Directed\n\n(**\n## Creating a Graph\n\nThe Graph can be created by the \u0022Graph.empty\u0022 function. The Graph can then be filled by the \u0022Vertices.add\u0022/\u0022Vertices.addMany\u0022 and the \u0022Edges.add\u0022/\u0022Edges.addMany\u0022 functions. \nKeep in mind that FSharp.FGL does not support unlabeled edges and unlabeled vertices\n\n*)\n\n//Creating a list of labeled vertices\nlet vertexList : LVertex\u003Cint,string\u003E list = List.init 4 (fun i -\u003E \n        i,\n        sprintf \u0022VertexNr. %i\u0022 i)\n\n//Creating a list of labeled edges\nlet edgeList : LEdge\u003Cint,float\u003E list = [(1,2,1.);(2,1,1.);(1,3,0.5);(3,4,0.8);(4,3,0.8)]\n\n//Creating a graph out of the two lists can be done in different ways\nlet myGraph : Graph\u003Cint,string,float\u003E = \n    Graph.create vertexList edgeList\n\nlet myGraph\u0027 : Graph\u003Cint,string,float\u003E =\n    Graph.empty\n    |\u003E Vertices.addMany vertexList\n    |\u003E Edges.addMany edgeList\n\n(**\nThe Graph.create function is located in the Directed and in the Undirected namespaces. Therefore calling it while having one of those opened will result in building the according graph type.\nAdding and Removing single vertices or edges can be done with the following functions:\n*)\n\nlet myChangedGraph : Graph\u003Cint,string,float\u003E =\n    myGraph\n    |\u003E Vertices.add (5,\u0022VertexNr. 5\u0022)\n    |\u003E Edges.add (5,1,0.7)\n    |\u003E Edges.remove (2,1)\n\n(**\n\n## Iteration\n\ncoming soon\n*)"},{"uri":"http://localhost:8901/content/terminology.html","title":"terminology","content":"(**\ncoming soon\n*)"},{"uri":"http://localhost:8901/content/tutorial.html","title":"Introduction\r\n","content":"(*** hide ***) \n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#I \u0022../../bin\u0022\n\n(**\n#Introduction\n\u003Chr\u003E\n\u003Ca name=\u0022InductiveGraph\u0022\u003E\u003C/a\u003E\n## Inductive Graph\nThe general aim of this FSharp.FGL is to provide an environment for F# programmers to functionally work with graphs. Besides the basic functions a graph-structure has to fulfill (like adding/removing vertices or counting edges), there are also functionalities needed which are not as elegantly and efficiently implementable in functional graphs (e.g. marking vertices as visited). This is tackled by Martin Erwig\u0027s [Inductive Graph Model](https://web.engr.oregonstate.edu/~erwig/papers/InductiveGraphs_JFP01.pdf). \n\nThe inductive graph consists of so called contexts. Every context carries the information about one vertex in the form (pred, id, l, succ) where:\u003Cbr\u003E\n\u003Cp class=\u0022indent\u0022\u003E-\u003Cb\u003Epred\u003C/b\u003E is a collection of all vertices pointing to this vertex\u003C/p\u003E\n\u003Cp class=\u0022indent\u0022\u003E-\u003Cb\u003Eid\u003C/b\u003E is the identifier of the vertex\u003C/p\u003E\n\u003Cp class=\u0022indent\u0022\u003E-\u003Cb\u003El\u003C/b\u003E is the label of the vertex\u003C/p\u003E\n\u003Cp class=\u0022indent\u0022\u003E-\u003Cb\u003Esucc\u003C/b\u003E is a collection of all vertices this vertex points to\u003C/p\u003E\nIn this structure, both pred and succ are of type adjacency. This type consists of the id of the other vertex and the edgelabel.\n\nWorking with the inductive graph model allows easy recursive walking through the graph because every vertex contains the information of it\u0027s edges to the other vertices. The so called [decompose-function]() then solves the problem of remembering which vertices were already visited by removing them from the graph.\n\n\u003Ca name=\u0022Features\u0022\u003E\u003C/a\u003E\n## Features\nThe basic structure of the implementation is done as in the [Hekate graph library](https://github.com/xyncro/hekate). Building a new library has many reasons:\n\u003Cp class=\u0022indent\u0022\u003E-FSharp.FGL was built with the intent to have easily readable code, so users can -if needed- design their own functions with the given structure more easily\u003C/p\u003E\n\u003Cp class=\u0022indent\u0022\u003E-The aforementioned decompose function is publicly accessible in FSharp.FGL. This is important for using path search algorithms more efficiently\u003C/p\u003E\n\u003Cp class=\u0022indent\u0022\u003E-The functions in FSharp.FGL are sorted into the Undirected and the Directed module. By this, users can more intuitively pick the right function for their purpose\u003C/p\u003E\n\u003Cp class=\u0022indent\u0022\u003E-FSharp.FGL aims to provide a thorough set of graph related functions, including path search functions and different graph models.\u003C/p\u003E\n\n*)"}]